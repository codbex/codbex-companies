openapi: 3.0.3
info:
  title: Companies Management Module - OpenAPI 3.0
  version: 1.0.0
  description: Managing companies data
externalDocs:
  description: Find out more about Eclipse Dirigible
  url: https://dirigible.io
servers:
  - url: /services/ts
tags:
  - name: Companies
paths:
  /codbex-companies/gen/codbex-companies/api/Companies/CompanyService.ts:
    get:
      summary: List Company
      parameters:
        - in: query
          name: $limit
          description: The number of records to be returned _(both `$limit` and `$offset` should be provided)_.
          required: false
          allowReserved: true
          schema:
            type: integer
            allowEmptyValue: true
        - in: query
          name: $offset
          description: The number of records to skip _(both `$limit` and `$offset` should be provided)_.
          required: false
          allowReserved: true
          schema:
            type: integer
            allowEmptyValue: true
      tags:
        - Companies
      responses:
        200:
          description: Successful Request
          content:
            application/json:
              schema:
                type: array
                items:
                    $ref: '#/components/schemas/Company'
        400:
          description: Bad Request Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        403:
          description: Forbidden Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    post:
      summary: Create Company
      tags:
        - Companies
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Company'
        required: true
      responses:
        201:
          description: Successful Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Company'
        400:
          description: Bad Request Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        403:
          description: Forbidden Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /codbex-companies/gen/codbex-companies/api/Companies/CompanyService.ts/{id}:
    get:
      summary: Get Company by Id
      parameters:
        - in: path
          name: id
          description: The Id of the entity.
          required: true
          schema:
            type: string
      tags:
        - Companies
      responses:
        200:
          description: Successful Request
          content:
            application/json:
              schema:
                type: array
                items:
                    $ref: '#/components/schemas/Company'
        404:
          description: Entity Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        403:
          description: Forbidden Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    put:
      summary: Update Company by Id
      parameters:
        - in: path
          name: id
          description: The Id of the entity.
          required: true
          schema:
            type: string
      tags:
        - Companies
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Company'
        required: true
      responses:
        200:
          description: Successful Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Company'
        400:
          description: Bad Request Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        404:
          description: Entity Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        403:
          description: Forbidden Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    delete:
      summary: Delete Company by Id
      parameters:
        - in: path
          name: id
          description: The Id of the entity.
          required: true
          schema:
            type: string
      tags:
        - Companies
      responses:
        204:
          description: Successful Request
        404:
          description: Entity Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        403:
          description: Forbidden Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /codbex-companies/gen/codbex-companies/api/Companies/CompanyService.ts/count:
    get:
      summary: Count the number of Company
      tags:
        - Companies
      responses:
        200:
          description: Successful Request
          content:
            application/json:
              schema:
                type: integer
                example: 100
        403:
          description: Forbidden Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    post:
      summary: Count the number of Company by CompanyFilterOptions
      tags:
        - Companies
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CompanyFilterOptions'
            examples:
              countWithMultipleCriteria:
                summary: Count with multiple criteria
                value:
                  $filter:
                    notEquals:
                      Id: 33
                    contains:
                      Name: "abcd"
                      Manager: "abcd"
                      Email: "abcd"
                      Phone: "abcd"
                      Address: "abcd"
                      PostCode: "abcd"
                      TIN: "abcd"
                      IBAN: "abcd"
                    greaterThan:
                      Id: 0
                    lessThanOrEqual:
                      Id: 100
              countWithEquals:
                summary: Count with Equals
                value:
                  $filter:
                    equals:
                      Id: 0
              countWithNotEquals:
                summary: Count with Not Equals
                value:
                  $filter:
                    notEquals:
                      Id: 0
              countWithContains:
                summary: Count with Contains
                value:
                  $filter:
                    contains:
                      Name: "abcd"
                      Manager: "abcd"
                      Email: "abcd"
                      Phone: "abcd"
                      Address: "abcd"
                      PostCode: "abcd"
                      TIN: "abcd"
                      IBAN: "abcd"
              countWithGreaterThan:
                summary: Count with Greater Than
                value:
                  $filter:
                    greaterThan:
                      Id: 0
              countWithGreaterThanOrEqual:
                summary: Count with Greater Than Or Equal
                value:
                  $filter:
                    greaterThanOrEqual:
                      Id: 0
              countWithLessThan:
                summary: Count with Less Than
                value:
                  $filter:
                    lessThan:
                      Id: 0
              countWithLessThanOrEqual:
                summary: Count with Less Than Or Equal
                value:
                  $filter:
                    lessThanOrEqual:
                      Id: 0
        required: true
      responses:
        200:
          description: Successful Request
          content:
            application/json:
              schema:
                type: integer
                example: 100
        403:
          description: Forbidden Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /codbex-companies/gen/codbex-companies/api/Companies/CompanyService.ts/search:
    post:
      summary: Search Company by CompanyFilterOptions
      tags:
        - Companies
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CompanyFilterOptions'
            examples:
              searchWithMultipleCriteria:
                summary: Search with multiple criteria
                value:
                  $filter:
                    notEquals:
                      Id: 33
                    contains:
                      Name: "abcd"
                      Manager: "abcd"
                      Email: "abcd"
                      Phone: "abcd"
                      Address: "abcd"
                      PostCode: "abcd"
                      TIN: "abcd"
                      IBAN: "abcd"
                    greaterThan:
                      Id: 0
                    lessThanOrEqual:
                      Id: 100
              searchWithEquals:
                summary: Search with Equals
                value:
                  $filter:
                    equals:
                      Id: 0
              searchWithNotEquals:
                summary: Search with Not Equals
                value:
                  $filter:
                    notEquals:
                      Id: 0
              searchWithContains:
                summary: Search with Contains
                value:
                  $filter:
                    contains:
                      Name: "abcd"
                      Manager: "abcd"
                      Email: "abcd"
                      Phone: "abcd"
                      Address: "abcd"
                      PostCode: "abcd"
                      TIN: "abcd"
                      IBAN: "abcd"
              searchWithGreaterThan:
                summary: Search with Greater Than
                value:
                  $filter:
                    greaterThan:
                      Id: 0
              searchWithGreaterThanOrEqual:
                summary: Search with Greater Than Or Equal
                value:
                  $filter:
                    greaterThanOrEqual:
                      Id: 0
              searchWithLessThan:
                summary: Search with Less Than
                value:
                  $filter:
                    lessThan:
                      Id: 0
              searchWithLessThanOrEqual:
                summary: Search with Less Than Or Equal
                value:
                  $filter:
                    lessThanOrEqual:
                      Id: 0
        required: true
      responses:
        200:
          description: Successful Request
          content:
            application/json:
              schema:
                type: array
                items:
                    $ref: '#/components/schemas/Company'
        403:
          description: Forbidden Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
components:
  schemas:
    Company:
      type: object
      required:
        - Name
        - Email
        - Address
        - PostCode
        - City
      properties:
        Id:
          type: integer
          format: int32
        Name:
          type: string
          minLength: 0
          maxLength: 100
        Manager:
          type: string
          minLength: 0
          maxLength: 50
        Email:
          type: string
          minLength: 0
          maxLength: 100
        Phone:
          type: string
          minLength: 0
          maxLength: 20
        Address:
          type: string
          minLength: 0
          maxLength: 200
        PostCode:
          type: string
          minLength: 0
          maxLength: 20
        City:
          type: integer
          format: int32
        Country:
          type: integer
          format: int32
        TIN:
          type: string
          minLength: 0
          maxLength: 20
        IBAN:
          type: string
          minLength: 0
          maxLength: 34
    CompanyFilterOptions:
      type: object
      properties:
        $filter:
          type: object
          properties:
            equals:
              type: object
              properties:
                Id:
                  oneOf:
                    - type: integer
                      format: int32
                    - type: array
                      items:
                        type: integer
                        format: int32
                Name:
                  oneOf:
                    - type: string
                      minLength: 0
                      maxLength: 100
                    - type: array
                      items:
                        type: string
                        format: double
                        minLength: 0
                        maxLength: 100
                Manager:
                  oneOf:
                    - type: string
                      minLength: 0
                      maxLength: 50
                    - type: array
                      items:
                        type: string
                        format: double
                        minLength: 0
                        maxLength: 50
                Email:
                  oneOf:
                    - type: string
                      minLength: 0
                      maxLength: 100
                    - type: array
                      items:
                        type: string
                        format: double
                        minLength: 0
                        maxLength: 100
                Phone:
                  oneOf:
                    - type: string
                      minLength: 0
                      maxLength: 20
                    - type: array
                      items:
                        type: string
                        format: double
                        minLength: 0
                        maxLength: 20
                Address:
                  oneOf:
                    - type: string
                      minLength: 0
                      maxLength: 200
                    - type: array
                      items:
                        type: string
                        format: double
                        minLength: 0
                        maxLength: 200
                PostCode:
                  oneOf:
                    - type: string
                      minLength: 0
                      maxLength: 20
                    - type: array
                      items:
                        type: string
                        format: double
                        minLength: 0
                        maxLength: 20
                City:
                  oneOf:
                    - type: integer
                      format: int32
                    - type: array
                      items:
                        type: integer
                        format: int32
                Country:
                  oneOf:
                    - type: integer
                      format: int32
                    - type: array
                      items:
                        type: integer
                        format: int32
                TIN:
                  oneOf:
                    - type: string
                      minLength: 0
                      maxLength: 20
                    - type: array
                      items:
                        type: string
                        format: double
                        minLength: 0
                        maxLength: 20
                IBAN:
                  oneOf:
                    - type: string
                      minLength: 0
                      maxLength: 34
                    - type: array
                      items:
                        type: string
                        format: double
                        minLength: 0
                        maxLength: 34
            notEquals:
              type: object
              properties:
                Id:
                  oneOf:
                    - type: integer
                      format: int32
                    - type: array
                      items:
                        type: integer
                        format: int32
                Name:
                  oneOf:
                    - type: string
                      minLength: 0
                      maxLength: 100
                    - type: array
                      items:
                        type: string
                        format: double
                        minLength: 0
                        maxLength: 100
                Manager:
                  oneOf:
                    - type: string
                      minLength: 0
                      maxLength: 50
                    - type: array
                      items:
                        type: string
                        format: double
                        minLength: 0
                        maxLength: 50
                Email:
                  oneOf:
                    - type: string
                      minLength: 0
                      maxLength: 100
                    - type: array
                      items:
                        type: string
                        format: double
                        minLength: 0
                        maxLength: 100
                Phone:
                  oneOf:
                    - type: string
                      minLength: 0
                      maxLength: 20
                    - type: array
                      items:
                        type: string
                        format: double
                        minLength: 0
                        maxLength: 20
                Address:
                  oneOf:
                    - type: string
                      minLength: 0
                      maxLength: 200
                    - type: array
                      items:
                        type: string
                        format: double
                        minLength: 0
                        maxLength: 200
                PostCode:
                  oneOf:
                    - type: string
                      minLength: 0
                      maxLength: 20
                    - type: array
                      items:
                        type: string
                        format: double
                        minLength: 0
                        maxLength: 20
                City:
                  oneOf:
                    - type: integer
                      format: int32
                    - type: array
                      items:
                        type: integer
                        format: int32
                Country:
                  oneOf:
                    - type: integer
                      format: int32
                    - type: array
                      items:
                        type: integer
                        format: int32
                TIN:
                  oneOf:
                    - type: string
                      minLength: 0
                      maxLength: 20
                    - type: array
                      items:
                        type: string
                        format: double
                        minLength: 0
                        maxLength: 20
                IBAN:
                  oneOf:
                    - type: string
                      minLength: 0
                      maxLength: 34
                    - type: array
                      items:
                        type: string
                        format: double
                        minLength: 0
                        maxLength: 34
            contains:
              type: object
              properties:
                Id:
                Name:
                  type: string
                  minLength: 0
                  maxLength: 100
                Manager:
                  type: string
                  minLength: 0
                  maxLength: 50
                Email:
                  type: string
                  minLength: 0
                  maxLength: 100
                Phone:
                  type: string
                  minLength: 0
                  maxLength: 20
                Address:
                  type: string
                  minLength: 0
                  maxLength: 200
                PostCode:
                  type: string
                  minLength: 0
                  maxLength: 20
                City:
                Country:
                TIN:
                  type: string
                  minLength: 0
                  maxLength: 20
                IBAN:
                  type: string
                  minLength: 0
                  maxLength: 34
            greaterThan:
              type: object
              properties:
                Id:
                  type: integer
                  format: int32
                Name:
                  type: string
                  minLength: 0
                  maxLength: 100
                Manager:
                  type: string
                  minLength: 0
                  maxLength: 50
                Email:
                  type: string
                  minLength: 0
                  maxLength: 100
                Phone:
                  type: string
                  minLength: 0
                  maxLength: 20
                Address:
                  type: string
                  minLength: 0
                  maxLength: 200
                PostCode:
                  type: string
                  minLength: 0
                  maxLength: 20
                City:
                  type: integer
                  format: int32
                Country:
                  type: integer
                  format: int32
                TIN:
                  type: string
                  minLength: 0
                  maxLength: 20
                IBAN:
                  type: string
                  minLength: 0
                  maxLength: 34
            greaterThanOrEqual:
              type: object
              properties:
                Id:
                  type: integer
                  format: int32
                Name:
                  type: string
                  minLength: 0
                  maxLength: 100
                Manager:
                  type: string
                  minLength: 0
                  maxLength: 50
                Email:
                  type: string
                  minLength: 0
                  maxLength: 100
                Phone:
                  type: string
                  minLength: 0
                  maxLength: 20
                Address:
                  type: string
                  minLength: 0
                  maxLength: 200
                PostCode:
                  type: string
                  minLength: 0
                  maxLength: 20
                City:
                  type: integer
                  format: int32
                Country:
                  type: integer
                  format: int32
                TIN:
                  type: string
                  minLength: 0
                  maxLength: 20
                IBAN:
                  type: string
                  minLength: 0
                  maxLength: 34
            lessThan:
              type: object
              properties:
                Id:
                  type: integer
                  format: int32
                Name:
                  type: string
                  minLength: 0
                  maxLength: 100
                Manager:
                  type: string
                  minLength: 0
                  maxLength: 50
                Email:
                  type: string
                  minLength: 0
                  maxLength: 100
                Phone:
                  type: string
                  minLength: 0
                  maxLength: 20
                Address:
                  type: string
                  minLength: 0
                  maxLength: 200
                PostCode:
                  type: string
                  minLength: 0
                  maxLength: 20
                City:
                  type: integer
                  format: int32
                Country:
                  type: integer
                  format: int32
                TIN:
                  type: string
                  minLength: 0
                  maxLength: 20
                IBAN:
                  type: string
                  minLength: 0
                  maxLength: 34
            lessThanOrEqual:
              type: object
              properties:
                Id:
                  type: integer
                  format: int32
                Name:
                  type: string
                  minLength: 0
                  maxLength: 100
                Manager:
                  type: string
                  minLength: 0
                  maxLength: 50
                Email:
                  type: string
                  minLength: 0
                  maxLength: 100
                Phone:
                  type: string
                  minLength: 0
                  maxLength: 20
                Address:
                  type: string
                  minLength: 0
                  maxLength: 200
                PostCode:
                  type: string
                  minLength: 0
                  maxLength: 20
                City:
                  type: integer
                  format: int32
                Country:
                  type: integer
                  format: int32
                TIN:
                  type: string
                  minLength: 0
                  maxLength: 20
                IBAN:
                  type: string
                  minLength: 0
                  maxLength: 34
        $select:
          type: array
          example: ["Id", "Name", "Manager", "Email", "Phone", "Address", "PostCode", "City", "Country", "TIN", "IBAN"]
          items:
            type: string
        $sort:
          - type: string
            example: "Id,Name,Manager,Email,Phone,Address,PostCode,City,Country,TIN,IBAN"
        $order:
          type: string
          enum: ["asc", "desc"]
          example: "asc"
        $offset:
          type: integer
          example: 0
        $limit:
          type: integer
          example: 10
    Error:
      type: object
      properties:
        code:
          type: integer
        message:
          type: string